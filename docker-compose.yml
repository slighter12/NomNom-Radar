# Common PostgreSQL 18 + PostGIS 3.6 configuration for both master and replica
x-postgres-common:
  &postgres-common
  image: postgis/postgis:18-3.6-alpine  # PostgreSQL 18 with PostGIS 3.6 (Alpine)
  platform: linux/amd64  # Force AMD64 for ARM64 compatibility
  user: postgres
  restart: always
  shm_size: 128mb
  environment: &postgres-env
    POSTGRES_USER: user
    POSTGRES_DB: auth_db
    POSTGRES_PASSWORD: password
    POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256 --data-checksums"
  healthcheck:
    test: ['CMD-SHELL', 'pg_isready -U user -d auth_db']
    interval: 10s
    timeout: 5s
    retries: 5

services:
  # PostgreSQL Master Database
  postgres-master:
    <<: *postgres-common
    container_name: radar-postgres-master
    ports:
      - "5432:5432"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
      -c archive_mode=on
      -c archive_command='test ! -f /var/lib/postgresql/backup_in_progress || exit 1; test ! -f /var/lib/postgresql/archive/%f || cp %p /var/lib/postgresql/archive/%f; rm %p'
      -c archive_timeout=60
    volumes:
      - postgres_master_data:/var/lib/postgresql/data
      - ./database/postgres/master:/docker-entrypoint-initdb.d
    networks:
      - radar-network

  # PostgreSQL Read-Only Replica
  postgres-replica:
    <<: *postgres-common
    container_name: radar-postgres-replica
    ports:
      - "5433:5432"
    environment:
      <<: *postgres-env
      PGPASSWORD: password
      PGDATA: /var/lib/postgresql/data/18/main
    entrypoint: |
      bash -c "
      echo 'Setting up PostgreSQL 18 replica...'
      
      # Wait for master to be ready
      until pg_isready -h postgres-master -p 5432 -U user; do
        echo 'Waiting for master to be ready...'
        sleep 2
      done
      
      # Create PostgreSQL 18 directory structure
      mkdir -p /var/lib/postgresql/data/18/main
      
      # Clean data directory for fresh base backup
      rm -rf /var/lib/postgresql/data/18/main/*
      
      # Perform base backup from master with replication slot
      echo 'Performing base backup from master...'
      pg_basebackup -h postgres-master -p 5432 -U user -D /var/lib/postgresql/data/18/main -R --slot=replica_slot
      
      # Set correct permissions for PostgreSQL
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod 0700 /var/lib/postgresql/data/18/main
      
      echo 'Starting PostgreSQL replica...'
      exec docker-entrypoint.sh postgres
      "
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    depends_on:
      postgres-master:
        condition: service_healthy
    networks:
      - radar-network

volumes:
  postgres_master_data:
    driver: local
  postgres_replica_data:
    driver: local

networks:
  radar-network:
    driver: bridge
