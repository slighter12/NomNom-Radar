name: Go CI Workflow

on:
  push:
    branches: 
      - main 
  pull_request:
    branches: 
      - main 
  workflow_dispatch:

env:
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: v2.1
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          # Get tag with fallback to commit hash
          if git describe --tags --abbrev=0 2>/dev/null; then
            echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          else
            echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi
          
          # Get lowercase repository name for Docker image
          echo "IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        id: set-vars

      - name: Set up Go version
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: go.mod
          check-latest: true

      - name: Get actual Go version for cache
        id: actual-go-version
        run: |
          # Get actual Go version for cache key
          ACTUAL_VERSION=$(go version | awk '{print $3}')
          echo "actual_version=$ACTUAL_VERSION" >> $GITHUB_OUTPUT
          echo "Using Go version for cache: $ACTUAL_VERSION"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

      - name: Lint
        run: |
          go vet ./...
          go fmt ./...
          golangci-lint run

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          pull: true
          tags: ${{ env.REGISTRY }}/${{ steps.set-vars.outputs.IMAGE_NAME }}:${{ steps.set-vars.outputs.TAG }}
          build-args: |
            VERSION=${{ steps.set-vars.outputs.TAG }}
            BUILT=${{ github.event.head_commit.timestamp }}
            GIT_COMMIT=${{ github.sha }}
            IMAGE_NAME=${{ steps.set-vars.outputs.IMAGE_NAME }}
          cache-from: type=gha,scope=go-${{ steps.actual-go-version.outputs.actual_version }}
          cache-to: type=gha,mode=max,scope=go-${{ steps.actual-go-version.outputs.actual_version }}

